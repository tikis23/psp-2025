openapi: 3.0.4
info:
  title: Swagger Petstore - OpenAPI 3.0
  termsOfService: https://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: order
    description: Order operations
paths:
  /order:
    post:
      tags:
        - order
      summary: Creates a new order.
      operationId: createOrder
      requestBody:
        description: Create a new order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '404':
          description: Employee not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
  /order/{orderId}:
    delete:
      tags:
        - order
      summary: Close order.
      operationId: closeOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '404':
          description: Order not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
  /order/{orderId}/item:
    post:
      tags:
        - order
      summary: Add item to an order.
      operationId: orderAddItem
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Item to add to order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '404':
          description: Order not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /order/{orderId}/item/{itemId}:
    delete:
      tags:
        - order
      summary: Remove item from order.
      operationId: orderRemoveItem
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
            format: int64
        - name: itemId
          in: path
          description: ID of the item to remove
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '404':
          description: Order not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
    
  /order/{orderId}/service:
    post:
      tags:
        - order
      summary: Add service to an order.
      operationId: orderAddService
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Service to add to order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '404':
          description: Order not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /order/{orderId}/service/{serviceId}:
    delete:
      tags:
        - order
      summary: Remove service from order.
      operationId: orderRemoveService
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
            format: int64
        - name: serviceId
          in: path
          description: ID of the service to remove
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '404':
          description: Order not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
  /order/{orderId}/tip:
    put:
      tags:
        - order
      summary: Set tip amount on order.
      operationId: orderSetTipAmount
      parameters:
        - name: orderId
          in: path
          description: ID of the order
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Tip amount to set. 0 means no tip
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TipAmount'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '404':
          description: Order not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
components:
  schemas:
    CreateOrder:
      type: object
      properties:
        employeeId:
          type: integer
          format: int64
          example: 1234
    
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        employeeId:
          type: integer
          format: int64
          example: 1234
        type:
          type: string
          description: Order Status
          example: open
          enum:
            - open
            - closed
            - cancelled
            - refunded
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          example: []
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          example: []
        tipAmount:
          type: integer
          format: int64
          example: 130
        createdTimestamp:
          type: string
          format: date-time
        closedTimestamp:
          type: string
          format: date-time
        

    Item:
      type: object
    Service:
      type: object
  
    TipAmount:
      type: object
      properties:
        tipAmount:
          type: integer
          format: int64
          example: 130
  
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message