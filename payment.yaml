openapi: 3.0.0
info:
  title: Payment endpoints
  description: FastApi endpoint specification
  version: 1.0.0

tags:
  - name: Payments
    description: Operations related to order payments
  - name: Refunds
    description: Operations related to payment refunds
  - name: Gift Cards
    description: Gift card balance and verification
  - name: Webhooks
    description: Webhook endpoints for payment provider callbacks

paths:
  /orders/{orderId}/payments:
    get:
      tags:
        - Payments
      summary: List all payments for an order
      description: Retrieves all payment records associated with an order, including their status and amounts
      parameters:
        - $ref: "#/components/parameters/OrderIdParam"
      responses:
        "200":
          description: List of payments retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  payments:
                    type: array
                    items:
                      $ref: "#/components/schemas/Payment"
                  totalPaid:
                    type: number
                    format: double
                    description: Total amount paid so far
                    example: 45.50
                  remainingBalance:
                    type: number
                    format: double
                    description: Remaining amount to be paid
                    example: 14.50
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/OrderNotFound"
      security:
        - BearerAuth: []

    post:
      tags:
        - Payments
      summary: Create a new payment for an order
      description: |
        Creates a payment record for an order. Supports multiple payment types:
        - **cash**: Immediate payment, captured instantly
        - **gift_card**: Redeems from gift card balance
        - **card**: Credit/debit card via Stripe Payment Intent

        Multiple payments can be made for split checks until order total is fully paid.
      parameters:
        - $ref: "#/components/parameters/OrderIdParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/CashPaymentRequest"
                - $ref: "#/components/schemas/GiftCardPaymentRequest"
                - $ref: "#/components/schemas/CardPaymentRequest"
            examples:
              cashPayment:
                summary: Cash payment
                value:
                  payment_type: cash
                  amount: 25.00
              giftCardPayment:
                summary: Gift card payment
                value:
                  payment_type: gift_card
                  amount: 15.00
                  gift_card_code: "GC-123456789"
              cardPayment:
                summary: Card payment
                value:
                  payment_type: card
                  amount: 60.00
      responses:
        "201":
          description: Payment created successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/CashPaymentResponse"
                  - $ref: "#/components/schemas/GiftCardPaymentResponse"
                  - $ref: "#/components/schemas/CardPaymentResponse"
              examples:
                cashSuccess:
                  summary: Cash payment success
                  value:
                    id: "pay_cash_001"
                    orderId: "ord_123"
                    payment_type: cash
                    amount: 25.00
                    status: succeeded
                    createdAt: "2025-10-05T14:30:00Z"
                    remainingBalance: 0.00
                giftCardSuccess:
                  summary: Gift card payment success
                  value:
                    id: "pay_gc_001"
                    orderId: "ord_123"
                    payment_type: gift_card
                    amount: 15.00
                    status: succeeded
                    gift_card_code: "GC-123456789"
                    remaining_card_balance: 5.00
                    createdAt: "2025-10-05T14:30:00Z"
                    remainingBalance: 10.00
                cardPendingAuth:
                  summary: Card payment requires authentication
                  value:
                    id: "pay_card_001"
                    orderId: "ord_123"
                    payment_type: card
                    amount: 60.00
                    status: requires_action
                    stripe_client_secret: "pi_xxx_secret_yyy"
                    requires_action: true
                    createdAt: "2025-10-05T14:30:00Z"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/OrderNotFound"
        "409":
          $ref: "#/components/responses/PaymentConflict"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
      security:
        - BearerAuth: []

  /payments/{paymentId}:
    get:
      tags:
        - Payments
      summary: Get payment details
      description: Retrieves detailed information about a specific payment
      parameters:
        - name: paymentId
          in: path
          required: true
          description: Unique payment identifier
          schema:
            type: string
            example: "pay_123"
      responses:
        "200":
          description: Payment details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payment"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Payment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Payment not found"
                code: "PAYMENT_NOT_FOUND"
      security:
        - BearerAuth: []

  /payments/{paymentId}/confirm:
    post:
      tags:
        - Payments
      summary: Confirm a card payment
      description: |
        Confirms a card payment with Stripe after customer authentication.
        Used for both regular payments and 3DS authentication completion.
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method_id:
                  type: string
                  description: Stripe payment method ID from client
                  example: "pm_card_visa"
      responses:
        "200":
          description: Payment confirmed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardPaymentResponse"
              example:
                id: "pay_card_001"
                orderId: "ord_123"
                payment_type: card
                amount: 60.00
                status: succeeded
                stripe_payment_intent_id: "pi_xxx"
                createdAt: "2025-10-05T14:30:00Z"
                confirmedAt: "2025-10-05T14:31:00Z"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Payment not found
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
      security:
        - BearerAuth: []

  /gift-cards/{cardCode}/balance:
    get:
      tags:
        - Gift Cards
      summary: Check gift card balance
      description: Verifies a gift card code and returns its current balance
      parameters:
        - name: cardCode
          in: path
          required: true
          description: Gift card code
          schema:
            type: string
            example: "GC-123456789"
      responses:
        "200":
          description: Gift card balance retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "GC-123456789"
                  balance:
                    type: number
                    format: double
                    example: 50.00
                  currency:
                    type: string
                    example: "USD"
                  isActive:
                    type: boolean
                    example: true
                  expiryDate:
                    type: string
                    format: date-time
                    nullable: true
                    example: "2026-12-31T23:59:59Z"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Gift card not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Gift card not found or invalid"
                code: "GIFT_CARD_NOT_FOUND"
      security:
        - BearerAuth: []

  /orders/{orderId}/refunds:
    post:
      tags:
        - Refunds
      summary: Create a full refund for an order
      description: |
        Initiates a full refund for a closed/paid order. 
        Refunds are processed back to the original payment methods.
        - Cash payments: Recorded as cash refund (CAPTURED status)
        - Gift card payments: Credit returned to gift card
        - Card payments: Refund created via Stripe (may be async)

        **Note**: Only full refunds are supported. Partial refunds are not allowed.
      parameters:
        - $ref: "#/components/parameters/OrderIdParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for the refund
                  example: "Customer requested cancellation"
                  maxLength: 500
              required:
                - reason
      responses:
        "201":
          description: Refund initiated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefundResponse"
              example:
                refundId: "ref_001"
                orderId: "ord_123"
                totalAmount: 60.00
                status: processing
                refundBreakdown:
                  - originalPaymentId: "pay_card_001"
                    paymentType: card
                    amount: 45.00
                    refundStatus: processing
                    stripeRefundId: "re_xxx"
                  - originalPaymentId: "pay_cash_001"
                    paymentType: cash
                    amount: 15.00
                    refundStatus: completed
                createdAt: "2025-10-05T15:00:00Z"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          $ref: "#/components/responses/OrderNotFound"
        "409":
          description: Refund conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                alreadyRefunded:
                  summary: Order already refunded
                  value:
                    error: "Order has already been refunded"
                    code: "ORDER_ALREADY_REFUNDED"
                orderNotPaid:
                  summary: Order not paid
                  value:
                    error: "Cannot refund an unpaid order"
                    code: "ORDER_NOT_PAID"
      security:
        - BearerAuth: []

  /refunds/{refundId}:
    get:
      tags:
        - Refunds
      summary: Get refund status
      description: Retrieves the current status and details of a refund
      parameters:
        - name: refundId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Refund details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefundResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: Refund not found
      security:
        - BearerAuth: []

  /webhooks/stripe:
    post:
      tags:
        - Webhooks
      summary: Stripe webhook endpoint
      description: |
        Receives webhook events from Stripe for payment status updates.
        Handles events such as:
        - payment_intent.succeeded
        - payment_intent.payment_failed
        - payment_intent.canceled
        - charge.refunded

        **Security**: Validates Stripe signature header.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "evt_xxx"
                type:
                  type: string
                  example: "payment_intent.succeeded"
                data:
                  type: object
                  properties:
                    object:
                      type: object
                      description: The Stripe object (PaymentIntent, Charge, etc.)
      responses:
        "200":
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  received:
                    type: boolean
                    example: true
        "400":
          description: Invalid signature or payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                error: "Invalid webhook signature"
                code: "INVALID_SIGNATURE"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from authentication endpoint

  parameters:
    OrderIdParam:
      name: orderId
      in: path
      required: true
      description: Unique order identifier
      schema:
        type: string
        example: "ord_123"

  schemas:
    OrderSummary:
      type: object
      properties:
        orderId:
          type: string
          example: "ord_123"
        items:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              quantity:
                type: integer
              price:
                type: number
                format: double
        subtotal:
          type: number
          format: double
          description: Sum of all items before taxes/discounts
          example: 50.00
        taxAmount:
          type: number
          format: double
          example: 4.50
        discountAmount:
          type: number
          format: double
          example: 5.00
        tipAmount:
          type: number
          format: double
          example: 10.00
        grandTotal:
          type: number
          format: double
          description: Final amount to be paid
          example: 59.50
        totalPaid:
          type: number
          format: double
          description: Amount paid so far
          example: 30.00
        remainingBalance:
          type: number
          format: double
          description: Amount still owed
          example: 29.50
        status:
          type: string
          enum: [open, partially_paid, paid, closed, cancelled, refunded]
          example: "partially_paid"

    Payment:
      type: object
      properties:
        id:
          type: string
          example: "pay_123"
        orderId:
          type: string
          example: "ord_123"
        payment_type:
          type: string
          enum: [cash, gift_card, card]
          example: "card"
        amount:
          type: number
          format: double
          example: 30.00
        status:
          type: string
          enum:
            [requires_action, processing, succeeded, failed, canceled, refunded]
        createdAt:
          type: string
          format: date-time
          example: "2025-10-05T14:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-10-05T14:31:00Z"
      required:
        - id
        - orderId
        - payment_type
        - amount
        - status

    CashPaymentRequest:
      type: object
      properties:
        payment_type:
          type: string
          enum: [cash]
          example: cash
        amount:
          type: number
          format: double
          minimum: 0.01
          example: 25.00
      required:
        - payment_type
        - amount

    CashPaymentResponse:
      allOf:
        - $ref: "#/components/schemas/Payment"
        - type: object
          properties:
            remainingBalance:
              type: number
              format: double
              description: Remaining order balance after this payment
              example: 0.00

    GiftCardPaymentRequest:
      type: object
      properties:
        payment_type:
          type: string
          enum: [gift_card]
          example: gift_card
        amount:
          type: number
          format: double
          minimum: 0.01
          description: Amount to charge from gift card
          example: 15.00
        gift_card_code:
          type: string
          description: Gift card code/number
          example: "GC-123456789"
      required:
        - payment_type
        - amount
        - gift_card_code

    GiftCardPaymentResponse:
      allOf:
        - $ref: "#/components/schemas/Payment"
        - type: object
          properties:
            gift_card_code:
              type: string
              example: "GC-123456789"
            amount_redeemed:
              type: number
              format: double
              description: Amount actually redeemed from card
              example: 15.00
            remaining_card_balance:
              type: number
              format: double
              description: Remaining balance on the gift card
              example: 5.00
            remainingBalance:
              type: number
              format: double
              description: Remaining order balance
              example: 10.00

    CardPaymentRequest:
      type: object
      properties:
        payment_type:
          type: string
          enum: [card]
          example: card
        amount:
          type: number
          format: double
          minimum: 0.01
          example: 60.00
      required:
        - payment_type
        - amount

    CardPaymentResponse:
      allOf:
        - $ref: "#/components/schemas/Payment"
        - type: object
          properties:
            stripe_payment_intent_id:
              type: string
              description: Stripe PaymentIntent ID
              example: "pi_xxx"
            stripe_client_secret:
              type: string
              description: Client secret for Stripe.js confirmation
              example: "pi_xxx_secret_yyy"
            requires_action:
              type: boolean
              description: Whether customer action (3DS) is required
              example: false
            confirmedAt:
              type: string
              format: date-time
              nullable: true
              description: When payment was confirmed
              example: "2025-10-05T14:31:00Z"

    RefundResponse:
      type: object
      properties:
        refundId:
          type: string
          example: "ref_001"
        orderId:
          type: string
          example: "ord_123"
        totalAmount:
          type: number
          format: double
          description: Total amount being refunded
          example: 60.00
        status:
          type: string
          enum: [processing, completed, failed]
          description: Overall refund status
          example: "processing"
        refundBreakdown:
          type: array
          description: Breakdown by original payment method
          items:
            type: object
            properties:
              originalPaymentId:
                type: string
                example: "pay_card_001"
              paymentType:
                type: string
                enum: [cash, gift_card, card]
                example: "card"
              amount:
                type: number
                format: double
                example: 45.00
              refundStatus:
                type: string
                enum: [pending, processing, completed, failed]
                example: "processing"
              stripeRefundId:
                type: string
                nullable: true
                description: Stripe refund ID (for card payments)
                example: "re_xxx"
              giftCardCreditId:
                type: string
                nullable: true
                description: Gift card credit transaction ID
        reason:
          type: string
          example: "Customer requested cancellation"
        createdAt:
          type: string
          format: date-time
          example: "2025-10-05T15:00:00Z"
        completedAt:
          type: string
          format: date-time
          nullable: true
          example: null
      required:
        - refundId
        - orderId
        - totalAmount
        - status
        - refundBreakdown

    Error:
      type: object
      properties:
        error:
          type: string
          description: Human-readable error message
          example: "Invalid payment amount"
        code:
          type: string
          description: Machine-readable error code
          example: "INVALID_AMOUNT"
        details:
          type: object
          description: Additional error details
          nullable: true
      required:
        - error
        - code

  responses:
    BadRequest:
      description: Bad request - invalid input
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            invalidAmount:
              summary: Invalid payment amount
              value:
                error: "Payment amount must be greater than 0"
                code: "INVALID_AMOUNT"
            missingField:
              summary: Missing required field
              value:
                error: "Missing required field: payment_type"
                code: "MISSING_FIELD"

    UnauthorizedError:
      description: Unauthorized - invalid or missing authentication token
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: "Invalid or expired authentication token"
            code: "UNAUTHORIZED"

    OrderNotFound:
      description: Order not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error: "Order not found"
            code: "ORDER_NOT_FOUND"

    PaymentConflict:
      description: Payment conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            amountExceedsBalance:
              summary: Amount exceeds remaining balance
              value:
                error: "Payment amount ($50.00) exceeds remaining balance ($29.50)"
                code: "AMOUNT_EXCEEDS_BALANCE"
            orderAlreadyPaid:
              summary: Order already fully paid
              value:
                error: "Order is already fully paid"
                code: "ORDER_ALREADY_PAID"
            orderClosed:
              summary: Order is closed
              value:
                error: "Cannot add payment to closed order"
                code: "ORDER_CLOSED"

    UnprocessableEntity:
      description: Unprocessable entity - business logic error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            insufficientGiftCardBalance:
              summary: Insufficient gift card balance
              value:
                error: "Gift card balance ($10.00) is less than requested amount ($15.00)"
                code: "INSUFFICIENT_GIFT_CARD_BALANCE"
                details:
                  available_balance: 10.00
                  requested_amount: 15.00
            stripePaymentFailed:
              summary: Stripe payment failed
              value:
                error: "Card payment failed: insufficient funds"
                code: "PAYMENT_FAILED"
                details:
                  stripe_error_code: "insufficient_funds"
